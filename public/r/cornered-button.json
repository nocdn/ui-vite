{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cornered-button",
  "type": "registry:ui",
  "title": "Cornered Button",
  "description": "A button with darker cornered edges.",
  "dependencies": [
    "radix-ui"
  ],
  "files": [
    {
      "path": "registry/default/ui/cornered-button/cornered-button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst corneredButtonVariants = cva(\n  \"relative inline-flex items-center justify-center overflow-visible border border-border bg-background text-sm font-medium ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent/50\",\n  {\n    variants: {\n      size: {\n        sm: \"h-8 px-3\",\n        md: \"h-9 px-4\",\n        lg: \"h-10 px-6\",\n      },\n      variant: {\n        default: \"\",\n        outline: \"bg-transparent\",\n        ghost: \"bg-transparent border-transparent hover:bg-accent\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90 border-transparent\",\n      },\n      corners: {\n        on: \"\",\n        off: \"\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n      variant: \"default\",\n      corners: \"on\",\n    },\n  }\n);\n\nexport interface CorneredButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof corneredButtonVariants> {\n  asChild?: boolean;\n  /** Border/corner stroke width in px */\n  borderWidth?: number;\n  /** Corner 'L' length in px */\n  cornerSize?: number;\n  /** Corner color (defaults to theme border) */\n  cornerColor?: string;\n}\n\nexport const CorneredButton = React.forwardRef<\n  HTMLButtonElement,\n  CorneredButtonProps\n>(\n  (\n    {\n      asChild,\n      className,\n      children,\n      size,\n      variant,\n      corners = \"on\",\n      type = \"button\",\n      borderWidth = 1,\n      cornerSize = 8,\n      cornerColor,\n      style,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n\n    // Expose tunables via CSS variables so Tailwind utilities can still override.\n    const cssVars: React.CSSProperties = {\n      [\"--cbw\" as any]: `${borderWidth}px`,\n      [\"--cbs\" as any]: `${cornerSize}px`,\n      ...(cornerColor ? { [\"--cbc\" as any]: cornerColor } : {}),\n    };\n\n    return (\n      <Comp\n        ref={ref}\n        type={asChild ? undefined : type}\n        data-corners={corners}\n        className={cn(corneredButtonVariants({ size, variant }), className)}\n        style={{ borderWidth: \"var(--cbw, 1px)\", ...cssVars, ...style }}\n        {...props}\n      >\n        {children}\n\n        {/* Decorative corners */}\n        {corners === \"on\" && (\n          <span\n            aria-hidden\n            className=\"pointer-events-none absolute -inset-[var(--cbw,1px)]\"\n          >\n            {([\"tl\", \"tr\", \"bl\", \"br\"] as const).map((pos) => (\n              <span\n                key={pos}\n                className={cn(\n                  \"absolute w-[var(--cbs,8px)] h-[var(--cbs,8px)]\",\n                  pos === \"tl\" && \"top-0 left-0\",\n                  pos === \"tr\" && \"top-0 right-0\",\n                  pos === \"bl\" && \"bottom-0 left-0\",\n                  pos === \"br\" && \"bottom-0 right-0\"\n                )}\n                style={{\n                  borderTop:\n                    pos === \"tl\" || pos === \"tr\"\n                      ? \"var(--cbw,1px) solid var(--cbc, hsl(var(--border)))\"\n                      : undefined,\n                  borderBottom:\n                    pos === \"bl\" || pos === \"br\"\n                      ? \"var(--cbw,1px) solid var(--cbc, hsl(var(--border)))\"\n                      : undefined,\n                  borderLeft:\n                    pos === \"tl\" || pos === \"bl\"\n                      ? \"var(--cbw,1px) solid var(--cbc, hsl(var(--border)))\"\n                      : undefined,\n                  borderRight:\n                    pos === \"tr\" || pos === \"br\"\n                      ? \"var(--cbw,1px) solid var(--cbc, hsl(var(--border)))\"\n                      : undefined,\n                }}\n              />\n            ))}\n          </span>\n        )}\n      </Comp>\n    );\n  }\n);\nCorneredButton.displayName = \"CorneredButton\";\n\nexport { corneredButtonVariants };\n",
      "type": "registry:ui"
    }
  ]
}